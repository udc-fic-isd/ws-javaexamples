
package es.udc.ws.movies.client.service.soap.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "MoviesProviderService", targetNamespace = "http://soap.ws.udc.es/", wsdlLocation = "file:/D:/udc/svn/ws-javaexamples/ws-movies/ws-movies-service/target/generated-sources/wsdl/MoviesProviderService.wsdl")
public class MoviesProviderService
    extends Service
{

    private final static URL MOVIESPROVIDERSERVICE_WSDL_LOCATION;
    private final static WebServiceException MOVIESPROVIDERSERVICE_EXCEPTION;
    private final static QName MOVIESPROVIDERSERVICE_QNAME = new QName("http://soap.ws.udc.es/", "MoviesProviderService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/udc/svn/ws-javaexamples/ws-movies/ws-movies-service/target/generated-sources/wsdl/MoviesProviderService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MOVIESPROVIDERSERVICE_WSDL_LOCATION = url;
        MOVIESPROVIDERSERVICE_EXCEPTION = e;
    }

    public MoviesProviderService() {
        super(__getWsdlLocation(), MOVIESPROVIDERSERVICE_QNAME);
    }

    public MoviesProviderService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MOVIESPROVIDERSERVICE_QNAME, features);
    }

    public MoviesProviderService(URL wsdlLocation) {
        super(wsdlLocation, MOVIESPROVIDERSERVICE_QNAME);
    }

    public MoviesProviderService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MOVIESPROVIDERSERVICE_QNAME, features);
    }

    public MoviesProviderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MoviesProviderService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MoviesProvider
     */
    @WebEndpoint(name = "MoviesProviderPort")
    public MoviesProvider getMoviesProviderPort() {
        return super.getPort(new QName("http://soap.ws.udc.es/", "MoviesProviderPort"), MoviesProvider.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MoviesProvider
     */
    @WebEndpoint(name = "MoviesProviderPort")
    public MoviesProvider getMoviesProviderPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.ws.udc.es/", "MoviesProviderPort"), MoviesProvider.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MOVIESPROVIDERSERVICE_EXCEPTION!= null) {
            throw MOVIESPROVIDERSERVICE_EXCEPTION;
        }
        return MOVIESPROVIDERSERVICE_WSDL_LOCATION;
    }

}
