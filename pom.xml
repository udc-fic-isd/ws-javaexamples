<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>es.udc.ws</groupId>
	<artifactId>ws-javaexamples</artifactId>
	<packaging>pom</packaging>
	<version>3.4.0</version>
	<name>WS-JavaExamples Project</name>

	<modules>
		<module>ws-jdbctutorial</module>
		<module>ws-util</module>
		<module>ws-movies</module>
	</modules>

	<!-- =================================================================== -->
	<!-- Default values for properties. These default values are expected to 
		be valid for most profiles. Specific profiles can overwrite values when necessary. -->
	<properties>
		<!-- Data source properties -->
		<dataSource.user>ws</dataSource.user>
		<dataSource.password>ws</dataSource.password>
		<dataSource.jndiName>jdbc/ws-javaexamples-ds</dataSource.jndiName>
		<testDataSource.user>${dataSource.user}</testDataSource.user>
		<testDataSource.password>${dataSource.password}</testDataSource.password>

		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Package versions (except those defined in "profiles" section) -->
		<commonsDbcp.version>2.7.0</commonsDbcp.version>
		<junit.version>5.6.2</junit.version>
		<servletApi.version>2.3</servletApi.version>
		<httpclient.version>4.5.12</httpclient.version>
		<jackson.version>2.11.0</jackson.version>
		<thrift.version>0.9.1</thrift.version>

		<!-- JDBC driver properties -->
		<jdbcDriver.groupId>mysql</jdbcDriver.groupId>
		<jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
		<jdbcDriver.version>8.0.20</jdbcDriver.version>
		<jdbcDriver.className>com.mysql.cj.jdbc.Driver</jdbcDriver.className>

		<!-- Data source properties -->
		<dataSource.baseUrl>jdbc:mysql://localhost/ws</dataSource.baseUrl>
        <dataSource.url>${dataSource.baseUrl}?useSSL=false&amp;serverTimezone=Europe/Madrid&amp;allowPublicKeyRetrieval=true</dataSource.url>
        <testDataSource.url>${dataSource.baseUrl}test?useSSL=false&amp;serverTimezone=Europe/Madrid&amp;allowPublicKeyRetrieval=true</testDataSource.url>
		<dataSource.createTablesScript>MySQLCreateTables.sql</dataSource.createTablesScript>

		<!-- Plugin versions -->
		<compilerMavenPlugin.version>3.8.1</compilerMavenPlugin.version>
		<resourcesMavenPlugin.version>3.1.0</resourcesMavenPlugin.version>
		<execMavenPlugin.version>3.0.0</execMavenPlugin.version>
		<sqlMavenPlugin.version>1.5</sqlMavenPlugin.version>
		<jettyMavenPlugin.version>9.4.28.v20200408</jettyMavenPlugin.version>
		<surefireMavenPlugin.version>2.22.2</surefireMavenPlugin.version>
		<assemblyMavenPlugin.version>3.3.0</assemblyMavenPlugin.version>
		<enforcerMavenPlugin.version>1.4.1</enforcerMavenPlugin.version>
		<thriftMavenPlugin.version>0.10.0</thriftMavenPlugin.version>

	</properties>

	<!-- ========================================================== -->
	<!-- Profiles -->
	<profiles>
	</profiles>

	<!-- ========================================================== -->
	<!-- Additional repositories -->
	<repositories>
	</repositories>

	<!-- ========================================================== -->
	<!-- Dependency management -->
	<dependencyManagement>
		<dependencies>
			<!-- JDBC driver -->
			<dependency>
				<groupId>${jdbcDriver.groupId}</groupId>
				<artifactId>${jdbcDriver.artifactId}</artifactId>
				<version>${jdbcDriver.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Commons DBCP - JDBC Connection Pool -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>${commonsDbcp.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- JUnit -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Servlet API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servletApi.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- WS-JavaExamples Util -->
			<dependency>
				<groupId>es.udc.ws</groupId>
				<artifactId>ws-util</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- Commons HttpClient -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!-- Jackson -->
			<dependency>
    			<groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-databind</artifactId>
    			<version>${jackson.version}</version>
			</dependency>
			<!-- Thrift -->
			<dependency>
					<groupId>org.apache.thrift</groupId>
					<artifactId>libthrift</artifactId>
					<version>${thrift.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>

		<!-- =============================================================== -->
		<!-- Filtering -->
		<resources>

			<!-- Continue considering resources the files in src/main/resources, but 
				without applying filtering. -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<!-- Filter Jetty configuration -->
			<resource>
				<directory>../../src/main/jetty</directory>
				<includes>
					<include>jetty-env.xml</include>
				</includes>
				<targetPath>../jetty</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>

			<!-- Continue considering resources the files in src/test/resources, but 
				without applying filtering. -->
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>


		<plugins>

			<!-- ========================================================== -->
			<!-- Compiler configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compilerMavenPlugin.version}</version>
				<configuration>
					<verbose>true</verbose>
                    <!-- Source & target are not necessary, but intelliJ depends on it to set the Java compiler settings  -->
                    <source>11</source>
                    <target>11</target>					
					<release>11</release>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Resources plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resourcesMavenPlugin.version}</version>
			</plugin>

			<!-- ========================================================== -->
			<!-- Surefire plugin -->
			<!-- Default version does not support JUnit 5. -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefireMavenPlugin.version}</version>
			</plugin>

  			<!-- ========================================================== -->
			<!-- Exec plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${execMavenPlugin.version}</version>
			</plugin>
            
			<!-- ========================================================== -->
			<!-- Setting SQL Plugin -->
			<!-- - Configuration specifies onError="continue" since SQL scripts try 
				to drop tables before creating them (which causes errors if such tables do 
				not exist yet). - Configuartion specifies autocommit="true" since some drivers 
				(e.g the PostgreSQL JDBC 2 driver) do not commit changes if some error ocurrs. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>${sqlMavenPlugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>${jdbcDriver.groupId}</groupId>
						<artifactId>${jdbcDriver.artifactId}</artifactId>
						<version>${jdbcDriver.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>${jdbcDriver.className}</driver>
					<url>${dataSource.url}</url>
					<username>${dataSource.user}</username>
					<password>${dataSource.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
					<fileset>
						<basedir>${basedir}</basedir>
						<includes>
							<include>
								src/sql/${dataSource.createTablesScript}
							</include>
						</includes>
					</fileset>
				</configuration>
				<executions>
					<execution>
						<id>create-tables-for-testing</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${jdbcDriver.className}</driver>
							<url>${testDataSource.url}</url>
							<username>${testDataSource.user}</username>
							<password>${testDataSource.password}</password>
							<autocommit>true</autocommit>
							<onError>continue</onError>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>
										src/sql/${dataSource.createTablesScript}
									</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- ========================================================== -->
			<!-- Assembly configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${assemblyMavenPlugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/src.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Jetty configuration -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jettyMavenPlugin.version}</version>

				<configuration>
					<httpConnector>
						<port>9090</port>
					</httpConnector>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
						<jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
					</webAppConfig>
					<reload>manual</reload>
				</configuration>

				<dependencies>
					<dependency>
						<groupId>${jdbcDriver.groupId}</groupId>
						<artifactId>${jdbcDriver.artifactId}</artifactId>
						<version>${jdbcDriver.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.commons</groupId>
						<artifactId>commons-dbcp2</artifactId>
						<version>${commonsDbcp.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- ========================================================== -->
			<!-- Enforcer configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${enforcerMavenPlugin.version}</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
								<version>3.0.5</version>
								</requireMavenVersion>
							</rules>    
						</configuration>
					</execution>
				</executions>
			</plugin>			

		</plugins>


	</build>

</project>
